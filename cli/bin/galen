#!/usr/bin/env node

// basic bash completion
var argv = require('yargs')
  .usage('Galen Framework is an open-source tool for testing layout and responsive design of web applications.\n\nUsage: $0 [options]')
  .completion('completion', function (current, argv) {
    var result = [
      'test',
      'check',
      'dump',
      'config',
      'help',
      'version'
    ];
    // 'current' is the current command being completed.
    // 'argv' is the parsed arguments so far.
    // simply return an array of completions.
    if (current) {
      argv=[];
      switch (current) {
        case 'test':
          result = [
            '<specFile>.gspec',
            '--htmlreport',
            '--testngreport',
            '--jsonreport',
            '--filter',
            '--parallel-tests'
          ];
          break;
        case 'check':
          result = [
            '<specFile>.test',
            '--url',
            '--size',
            '--javascript',
            '--include',
            '--exclude',
            '--htmlreport',
            '--testngreport',
            '--jsonreport'
          ];
          break;
        case 'dump':
          result = [
            '<specFile>.gspec',
            '--url',
            '--size',
            '--export',
            '--max-width',
            '--max-height',
          ];
          break;
      }
    }
    return result;
  }).argv;


var spawn = require('child_process').spawn;
var path = require('path');
var baseDir = path.dirname(require.main.filename);
var childProcessOptions = {
  stdio: 'inherit'
};

// remove node args
var args = process.argv.slice(2);

// adding chromedriver

var chromePath = path.resolve(baseDir, '../node_modules/chromedriver/lib/chromedriver/chromedriver');
if (process.platform === 'win32') {
  chromePath+='.exe';
}
args.push('-Dwebdriver.chrome.driver=' + chromePath);

var programPath;
if (process.platform === 'win32') {
  programPath = path.resolve(baseDir, '../node_modules/galenframework/lib/galen/galen.bat');
} else {
  programPath = path.resolve(baseDir, '../node_modules/galenframework/lib/galen/galen');
}

var galenProcess = spawn(programPath, args, childProcessOptions);

galenProcess.on('error', function (error) {
  console.error(error);
  process.exit(1);
});

galenProcess.on('exit', function (exitCode) {
  process.exit(exitCode);
});
